plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.0'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'JMatt26'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-core:2.+'
	testImplementation 'org.mockito:mockito-junit-jupiter:2.18.3'
}

tasks.named('test') {
	useJUnitPlatform()
}

allprojects {
  jacoco.toolVersion = "0.8.7"
}

jacocoTestCoverageVerification {
  dependsOn test
    violationRules {
        rule {
            enabled = true
            element = 'CLASS'
            includes = [
              'api.museumplanner.services.*',
            ]
            limit {
                value = 'TOTALCOUNT'
                minimum = 0.6
            }
        }
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: 'api.museumplanner.controllers**')
        }))
    }
}

jacoco {
    toolVersion = "0.8.7"
    reportsDir = file("$buildDir/jacoco")
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}
